openapi: 3.1.0
info:
  title: API сервер для демо-проекта «Шесть городов (простой)».
  description: |-
    * Список ресурсов и маршрутов сервера «Шесть городов (простой)».
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  version: 2.0.0
tags:
  - name: offers
    description: Действия с объявлениями.
  - name: comments
    description: Действия с комментариями.
  - name: users
    description: Действия с пользователем.

paths:
  /offers:
    post:
      tags:
        - offers
      summary: Создание нового предложения по аренде
      description: Создает новое предложения по аренде

      responses:
        "201":
          description: Новое предложение по аренде создано.

        "400":
          description: Ошибка при создании предложения.

    get:
      tags:
        - offers
      summary: Список предложений по аренде
      description: Получает список предложений по аренде

  /offers/{offerId}:
    put:
      tags:
        - offers
      summary: Редактирование предложения по аренде
      description: Редактирует предложения по аренде

    delete:
      tags:
        - offers
      summary: Удаление предложения по аренде
      description: Удаляет предложения по аренде

    get:
      tags:
        - offers
      summary: Детальная информация по предложению
      description: Получает детальную информацию по предложению

  /comments/{offerId}:
    get:
      tags:
        - comments
      summary: Список комментариев для предложения
      description: Получает список комментариев для предложения

    post:
      tags:
        - comments
      summary: Добавление комментария
      description: Добавляет комментарий для предложения

  /users/register:
    post:
      tags:
        - users
      summary: Регистрация пользователя
      description: Регистрирует нового пользователя.

      requestBody:
        description: Информация для создания нового пользователя.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createUser'
        required: true

      responses:
        "201":
          description: Пользователь зарегистрирован. Объект пользователя.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'

        "409":
          description: Пользователь с таким email уже существует.

  /users/login:
    post:
      tags:
        - users
      summary: Авторизация пользователя
      description: Авторизует пользователя на основе логина и пароля

    get:
      tags:
        - users
      summary: Проверка состояния пользователя
      description: Возвращает информацию по авторизованному пользователю


components:
  schemas:
    createUser:
      type: object

      properties:
        email:
          type: string
          example: bratsgorEgor@gmail.com

        name:
          type: string
          example: BratsgorEgor

        isPro:
          type: boolean
          example: true

        avatar:
          type: string
          example: avatar.png

        password:
          type: string
          example: pass

    user:
      type: object

      properties:
        id:
          type: string
          example: ddd7asdasd7d7

        email:
          type: string
          example: bratsgorEgor@gmail.com